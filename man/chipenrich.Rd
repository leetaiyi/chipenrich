% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chipenrich.R, R/chipenrich_package_doc.R
\docType{package}
\name{chipenrich}
\alias{chipenrich}
\alias{chipenrich-package}
\title{Run ChIP-Enrich on a dataset of ChIP-seq peaks}
\usage{
chipenrich(peaks, out_name = "chipenrich", out_path = getwd(),
  genome = "hg19", genesets = c("GOBP", "GOCC", "GOMF"),
  locusdef = "nearest_tss", method = "chipenrich",
  fisher_alt = "two.sided", use_mappability = F, mappa_file = NULL,
  read_length = 36, qc_plots = T, max_geneset_size = 2000,
  num_peak_threshold = 1, n_cores = 1)
}
\arguments{
\item{peaks}{A \code{data.frame}, or tab-delimited text file (BED, narrowPeak,
broadPeak, etc) with the first three columns being chrom, start, and end. The
data frame should have at least 3 columns: chrom, start, and end. Chrom
should follow UCSC convention, e.g. "chrX".}

\item{out_name}{Prefix string to use for naming output files. This should not
contain any characters that would be illegal for the system being used (Unix,
Windows, etc.) The default value is "chipenrich", and a file "chipenrich_results.tab"
is produced. If \code{qc_plots} is set, then a file "chipenrich_qcplots.pdf"
is produced containing a number of quality control plots. If \code{out_name}
is set to NULL, no files are written, and results then must be retrieved from
the list returned by \code{chipenrich}.}

\item{out_path}{Directory to which results files will be written out. Defaults
to the current working directory as returned by \code{\link{getwd}}.}

\item{genome}{A string indicating the genome upon which the peaks file is
based. Supported genomes are listed by the \code{\link{supported_genomes}} function.}

\item{genesets}{A character vector of geneset databases to be tested for
enrichment. A list of supported geneset databases can be generated by the
'\code{\link{supported_genesets}} function.}

\item{locusdef}{A string denoting the gene locus definition to be used, or
the full path to a user-defined locus definition file. A gene locus definition
controls how peaks are assigned to genes. See \code{\link{supported_locusdefs}}
for a list of supported definitions built-in. If using a user-specified file,
the file must have 4 columns: geneid, chrom, start, end and be tab-delimited.}

\item{method}{A character string specifying the method to use for enrichment
testing. Must be one of ChIP-Enrich ('chipenrich') (default), Broad-Enrich
('broadenrich'), or Fisher's exact test ('fet'). For a list of supported
methods, use \code{\link{supported_methods}}.}

\item{fisher_alt}{If method is 'fet', this option indicates the alternative
for Fisher's exact test, and must be one of 'two-sided' (default), 'greater',
or 'less'.}

\item{use_mappability}{A logical variable indicating whether to adjust for
mappability. If enabled, this option will use our internally calculated
mappabilities for each gene locus given the length of reads used in the
experiment (see \code{read_length} option). NOTE: If providing a \code{mappa_file}
this parameter should be set to FALSE.}

\item{mappa_file}{Path to a file containing user-specified gene locus
mappability. The file should contain two columns: geneid and mappa. Gene IDs
should be Entrez gene IDs. Mappability values should be between 0 and 1.}

\item{read_length}{If adjusting for mappability, this number specifies the
read length to be used. The read length given here should ideally correspond
to the length of reads from the original experiment.}

\item{qc_plots}{A logical variable that enables the automatic generation of
plots for quality control.}

\item{max_geneset_size}{Sets the maximum number of genes a gene set may have
to be considered for enrichment testing.}

\item{num_peak_threshold}{Sets the threshold for how many peaks a gene must
have to be considered as having a peak. Defaults to 1. Only relevant for
Fisher's exact test and ChIP-Enrich methods.}

\item{n_cores}{The number of cores to use for enrichment testing. We recommend
using only up to the maximum number of \emph{physical} cores present, as
virtual cores do not significantly decrease runtime. Default number of cores
is set to 1. NOTE: Windows does not support multicore enrichment.}
}
\value{
A list, containing the following items:
\item{peaks }{
A data frame containing peak assignments to genes. Peaks which do not overlap
a gene locus are not included. Each peak that was assigned to a gene is listed,
along with the peak midpoint or peak interval coordinates (depending on which
was used), the gene to which the peak was assigned, the locus start and end
position of the gene, and the distance from the peak to the TSS.

The columns are:

\describe{
  \item{peak_id}{ is an ID given to unique combinations of chromosome, peak
start, and peak end. }
  \item{chrom}{ is the chromosome the peak originated from. }
  \item{peak_start}{ is start position of the peak. }
  \item{peak_end}{ is end position of the peak. }
  \item{peak_midpoint}{ is the midpoint of the peak. }
  \item{geneid}{ is the Entrez ID of the gene to which the peak was assigned. }
  \item{gene_symbol}{ is the official gene symbol for the geneid (above). }
  \item{gene_locus_start}{ is the start position of the locus for the gene to which the peak was assigned (specified by the locus definition used.) }
  \item{gene_locus_end}{ is the end position of the locus for the gene to which the peak was assigned (specified by the locus definition used.) }
  \item{nearest_tss}{ (\code{method='chipenrich'} and \code{method='fet'}) is the closest TSS to this peak (for any gene, not necessarily the gene this peak was assigned to.) }
  \item{nearest_tss_gene}{ (\code{method='chipenrich'} and \code{method='fet'}) is the gene having the closest TSS to the peak (should be the same as geneid when using the nearest TSS locus definition.) }
  \item{nearest_tss_gene_strand}{ (\code{method='chipenrich'} and \code{method='fet'}) is the strand of the gene with the closest TSS. }
  \item{overlap_start}{ (\code{method='broadenrich'} only) the start position of the peak overlap with the gene locus.}
  \item{overlap_end}{ (\code{method='broadenrich'} only) the end position of the peak overlap with the gene locus.}
  \item{peak_overlap}{ (\code{method='broadenrich'} only) the base pair overlap of the peak with the gene locus.}
}}

\item{results }{
A data frame of the results from performing the gene set enrichment test on
each geneset that was requested (all genesets are merged into one final data
frame.) The columns are:

\describe{
  \item{Geneset.ID}{ is the identifier for a given gene set from the selected database.  For example, GO:0000003. }
  \item{Geneset.Type}{ specifies from which database the Geneset.ID originates.  For example, "Gene Ontology Biological Process."}
  \item{Description}{ gives a definition of the geneset. For example, "reproduction."}
  \item{P.Value}{ is the probability of observing the degree of enrichment of the gene set given the null hypothesis that peaks are not associated with any gene sets.}
  \item{FDR}{ is the false discovery rate proposed by Bejamini \& Hochberg for adjusting the p-value to control for family-wise error rate.}
  \item{Odds.Ratio}{ is the estimated odds that peaks are associated with a given gene set compared to the odds that peaks are associated with other gene sets, after controlling for locus length and/or mappability.  An odds ratio greater than 1 indicates enrichment, and less than 1 indicates depletion.}
  \item{N.Geneset.Genes}{ is the number of genes in the gene set.}
  \item{N.Geneset.Peak.Genes}{ is the number of genes in the genes set that were assigned at least one peak.}
  \item{Geneset.Avg.Gene.Length}{ is the average length of the genes in the gene set.}
  \item{Geneset.Avg.Gene.Coverage}{ (\code{method='broadenrich'} only) is the mean proportion of the gene loci in the gene set covered by a peak.}
  \item{Geneset.Peak.Genes}{ is the list of genes from the gene set that had at least one peak assigned.}

}}

\item{opts }{A data frame containing the arguments/values passed to \code{chipenrich}.}

\item{peaks_per_gene }{
A data frame of the count of peaks per gene. The columns are:

\describe{
  \item{geneid}{ is the Entrez Gene ID. }
  \item{length}{ is the length of the gene's locus (depending on which locus definition you chose.)}
  \item{log10_length}{ is the log10(locus length) for the gene.}
  \item{num_peaks}{ is the number of peaks that were assigned to the gene, given the current locus definition. }
  \item{peak}{ is whether or not the gene is considered to have a peak, as defined by \code{num_peak_threshold}. }
  \item{peak_overlap}{ (\code{method='broadenrich'} only) is the number of base pairs of the gene covered by a peak.}
  \item{ratio}{ (\code{method='broadenrich'} only) is the proportion of the gene covered by a peak.}
}}
}
\description{
Run gene set enrichment testing (ChIP-Enrich or Broad-Enrich) on a ChIP-seq
peak dataset or other type of dataset consisting of regions across the genome.
The user can call \code{chipenrich} to run the method on their data. A number
of arguments can be provided to change the type of test, the genome build,
which sets of genes to test, how peaks are assigned to genes, and other minor options.

ChIP-Enrich performs gene set enrichment testing using peaks called from a
ChIP-seq experiment. The method empirically corrects for confounding factors
such as the length of genes, and the mappability of the sequence surrounding genes.
}
\examples{

# Run ChipEnrich using an example dataset, assigning peaks to the nearest TSS,
# testing all Biocarta and Panther pathways
data(peaks_E2F4, package = 'chipenrich.data')
peaks_E2F4 = subset(peaks_E2F4, peaks_E2F4$chrom == 'chr1')
gs_path = system.file('extdata','vignette_genesets.txt', package='chipenrich')
results = chipenrich(peaks_E2F4, method='chipenrich', locusdef='nearest_tss',
			genesets=gs_path, out_name=NULL)

# Get the list of peaks that were assigned to genes.
assigned_peaks = results$peaks

# Get the results of enrichment testing.
enrich = results$results

}

